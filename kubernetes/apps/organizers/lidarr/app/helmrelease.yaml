---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: organizers
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
#   - name: volsync
#     namespace: volsync
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          annotations:
            setGateway: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/bh2754/lidarr-develop
              tag: 2.11.0@sha256:88fc7c8d8d2585e3802db3e8e38878534ebff9b12032bb9605c008dee790025d
            env:
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
            envFrom:
              - secretRef:
                  name: lidarr-secret
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 200m
                memory: 700Mi
              limits:
                memory: 1Gi
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: 8686
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hosts:
          - host: lidarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: lidarr-config-v1
      media:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_MUSIC}
      downloads:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: /volume1/Download
